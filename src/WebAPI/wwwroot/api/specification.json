{
  "x-generator": "NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "StackLab Template",
    "version": "1.0.0"
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_Login",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sing-up": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_Register",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/password/reset/{login}": {
      "get": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_ResetPasswordGET",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_ResetPasswordPOST",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/auth/verification-code": {
      "get": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_GetChangeEmailCode",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/auth/email": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_ChangeEmail",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeEmailCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/auth/password": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_ChangePassword",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/chats/messages": {
      "get": {
        "tags": [
          "Chats"
        ],
        "operationId": "Chats_ListMessages",
        "parameters": [
          {
            "name": "ChatId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "OtherUserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Sort",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          },
          {
            "name": "PageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfChatMessageResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "operationId": "Events_List",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfEventResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Events"
        ],
        "operationId": "Events_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          }
        }
      }
    },
    "/events/{id}": {
      "put": {
        "tags": [
          "Events"
        ],
        "operationId": "Events_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEventCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          }
        }
      }
    },
    "/registrations": {
      "get": {
        "tags": [
          "Registrations"
        ],
        "operationId": "Registrations_List",
        "parameters": [
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "nullable": true,
              "oneOf": [
                {
                  "$ref": "#/components/schemas/RegistrationStatusEnum"
                }
              ]
            },
            "x-position": 1
          },
          {
            "name": "Attended",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "PageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfRegistrationResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Registrations"
        ],
        "operationId": "Registrations_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRegistrationCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/registrations/{id}": {
      "put": {
        "tags": [
          "Registrations"
        ],
        "operationId": "Registrations_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRegistrationCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "LoginCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "RegisterCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ResetPasswordCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "password": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "ChangeEmailCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "validationCode": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "ChangePasswordCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "validationCode": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "PaginatedListOfChatMessageResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatMessageResponse"
            }
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "ChatMessageResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "chatId": {
            "type": "integer",
            "format": "int32"
          },
          "senderId": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string"
          },
          "createdAtUtc": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PaginatedListOfEventResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventResponse"
            }
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "EventResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EventTypeEnum"
          },
          "description": {
            "type": "string"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "slots": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftEnum"
            }
          }
        }
      },
      "EventTypeEnum": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Lecture",
          "Dynamic",
          "Practice"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "Status": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Inactive",
          "Active"
        ],
        "enum": [
          0,
          1
        ]
      },
      "ShiftEnum": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Morning",
          "Afternoon",
          "Evening"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "CreateEventCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EventTypeEnum"
          },
          "description": {
            "type": "string"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "slots": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftEnum"
            }
          }
        }
      },
      "UpdateEventCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EventTypeEnum"
          },
          "description": {
            "type": "string"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "slots": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "shifts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShiftEnum"
            }
          }
        }
      },
      "PaginatedListOfRegistrationResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegistrationResponse"
            }
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RegistrationStatusEnum"
              }
            ]
          },
          "attended": {
            "type": "boolean",
            "nullable": true
          },
          "justification": {
            "type": "string",
            "nullable": true
          },
          "participationsCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RegistrationStatusEnum": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "NotSelected",
          "Selected"
        ],
        "enum": [
          0,
          1
        ]
      },
      "CreateRegistrationCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "eventId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateRegistrationCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RegistrationStatusEnum"
              }
            ]
          },
          "attended": {
            "type": "boolean",
            "nullable": true
          },
          "justification": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}